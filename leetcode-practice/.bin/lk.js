#! /usr/bin/env node
import{program as D}from"commander";var I=`   __           _                _          ___                _   _          
  / /  ___  ___| |_ ___ ___   __| | ___    / _ \\_ __ __ _  ___| |_(_) ___ ___ 
 / /  / _ \\/ _ \\ __/ __/ _ \\ / _\` |/ _ \\  / /_)/ '__/ _\` |/ __| __| |/ __/ _ \\
/ /__|  __/  __/ || (_| (_) | (_| |  __/ / ___/| | | (_| | (__| |_| | (_|  __/
\\____/\\___|\\___|\\__\\___\\___/ \\__,_|\\___| \\/    |_|  \\__,_|\\___|\\__|_|\\___\\___|
                                                                              `;var P=`
Examples:
  # Command with no parameters
  $ lk          // Check today's question.
  $ lk 1314     // Check the question by its ID.
  # Exclusive commands
  $ lk -t       // Full text command to check today's question.
  $ lk -i 1314  // Full text command to check the question by its ID.
  $ lk -r       // Check a randomly generated question.
  # Other instructions
  $ lk -e       // Easy mode to check a question.
  $ lk -d src   // Use the relative path to the source folder.
  $ lk -l       // Get the code language of question.
  $ lk -l java  // Set the code language of question.
  $ lk -u       // Check the version to determine whether to update to the latest one.
  $ lk -v       // Check the CLI version.
  $ lk -h       // Display the help information.
  
`;var V="Made with \u2764\uFE0F by EternalHeart team.";var T="\u2615\uFE0F Enjoy your time on coding.";var U=(e,t)=>e.length>0||t.identity?"identity":t.random?"random":"today";var A=(e,t,o)=>{switch(e){case"identity":return t.length?t.join(" "):o?.identity;case"random":case"today":default:return null}};import ze from"fs";import xe from"path";import be from"fs";import R from"vm";import G from"v8";function we(e){return e<1024?{size:1,label:"B"}:e<1048576?{size:1024,label:"KB"}:e<1073741824?{size:1048576,label:"MB"}:e<1099511627776?{size:1073741824,label:"GB"}:e<1099511627776?{size:1099511627776,label:"TB"}:{size:1099511627776,label:"PB"}}function M(e,t=2){let o=we(e);return`${(e/o.size).toFixed(t)} ${o.label}`}function C(e,t){let o=typeof e;if(o!==typeof t)return!1;switch(o){case"bigint":case"boolean":case"number":case"string":case"symbol":case"undefined":return e===t;case"function":return e.toString()===t.toString();case"object":if(e==null)return e===t;let n=Object.keys(e),r=Object.keys(t);return n.length!==r.length?!1:n.every(i=>C(e[i],t[i]))}}var x=class e{constructor(t,o){this.val=t===void 0?0:t,this.neighbors=o===void 0?[]:o}static parse(t){let o=new Map,s=n=>{if(!o.has(n)){let r=new e(n);o.set(n,r)}return o.get(n)};return t.forEach((n,r)=>{let i=r+1,a=s(i);n.forEach(c=>{let l=s(c);a.neighbors.push(l)})}),o.size>0?o.values().next().value:null}static toArray(t){if(!t)return[];let o=new Set,s=[],n=r=>{if(o.has(r.val))return;let{neighbors:i,val:a}=r;o.add(a),s.push(i.map(({val:c})=>c)),r.neighbors.forEach(c=>{n(c)})};return n(t),s}};var _=class e{constructor(t,o,s){this.left=null,this.val=t===void 0?0:t,this.left=o===void 0?null:o,this.right=s===void 0?null:s}static parse(t){if(t.length===0)return null;let o=new e(t[0]),s=[o];for(let n=1;n<t.length;n+=2){let r=s.shift();t[n]!==null&&(r.left=new e(t[n]),s.push(r.left)),t[n+1]!==null&&(r.right=new e(t[n+1]),s.push(r.right))}return o}static toArray(t){let o=[];if(!t)return o;let s=[t];for(;s.length>0;){let n=s.shift();n?(o.push(n.val),s.push(n.left),s.push(n.right)):o.push(null)}for(;o.length>0&&o[o.length-1]===null;)o.pop();return o}};var f=class e{constructor(t,o){this.val=t===void 0?0:t,this.next=o===void 0?null:o}static parse(t){if(t.length===0)return null;let o=new e(t.shift(),null),s=o;for(;t.length>0;)s.next=new e(t.shift(),null),s=s.next;return o}static toArray(t,o=[]){return t==null?o:(o.push(t.val),e.toArray(t.next,o))}};var Se={cases:{ListNode:e=>f.parse(e),"ListNode[]":e=>e.map(t=>f.parse(t)),TreeNode:e=>_.parse(e),Node:e=>x.parse(e),default:e=>e},return:{ListNode:e=>f.toArray(e),"ListNode[]":e=>e.map(t=>f.toArray(t)),TreeNode:e=>_.toArray(e),Node:e=>x.toArray(e),default:e=>e}},B=(e,t,o="cases")=>e.map((s,n)=>{let r=t[n],i=Se[o];return i[r]?i[r](s):i.default(s)});function $e(e,t,o,s){let n=performance.now(),r=G.getHeapSpaceStatistics(),i=e(...t),[a]=B([i],s,"return"),c=G.getHeapSpaceStatistics(),l=performance.now(),d=r.reduce((u,j)=>u+=j.space_used_size,0),p=c.reduce((u,j)=>u+=j.space_used_size,0);return{\u6D4B\u8BD5\u7ED3\u679C:C(a,o)?"\u901A\u8FC7":"\u672A\u901A\u8FC7",\u9884\u671F\u7ED3\u679C:JSON.stringify(o),\u6267\u884C\u7ED3\u679C:JSON.stringify(a),\u6267\u884C\u7528\u65F6:`${Number(l-n).toFixed(4)}ms`,\u5185\u5B58\u5360\u7528:M(p-d)}}function J(e,t,o){let s=[],{data:n,structure:r}=t,{data:i,structure:a}=o;n.forEach((c,l)=>{let d=B(c,r),p=$e(e,d,i[l],a);s.push(p)}),console.table(s)}function qe(e,t){let o=be.readFileSync(e,"utf-8");return new R.Script(o).runInContext(t)}var S=async e=>await qe(e,R.createContext({showLogs:J,console}));import Ce from"realm";import z from"realm";var $=class extends z.Object{static schema={name:"Question",properties:{_id:{type:"objectId",default:()=>new z.BSON.ObjectId},id:"string",mode:"string",slug:"string",title:"string",detail:"string",lang:"string",code:"string",url:"string?",date:"string?",timestamp:{type:"date",default:()=>new Date}},primaryKey:"_id"}};import Be from"path";import{fileURLToPath as ke}from"url";import{dirname as ve}from"path";var Qe=ke(import.meta.url),K=ve(Qe);import L from"path";var b=L.dirname(L.dirname(L.dirname(K)));import je from"realm";var q=class extends je.Object{static schema={name:"Store",properties:{key:"string",value:"string",timestamp:{type:"date",default:()=>new Date}},primaryKey:"key"}};var Le=Be.resolve(b,"resources/stores/store.realm"),Ne=async()=>await Ce.open({schema:[$,q],path:Le}),k=async e=>{let t=await Ne(),o=await e(t);return t.close(),o};var g=e=>k(t=>t.objects("Question").filtered("mode=$0",e)?.[0]?.toJSON());function H(e){return{headers:{"content-type":"application/json"},body:`{"query":"\\n    query problemsetQuestionList($categorySlug: String, $limit: Int, $skip: Int, $filters: QuestionListFilterInput) {\\n  problemsetQuestionList(\\n    categorySlug: $categorySlug\\n    limit: $limit\\n    skip: $skip\\n    filters: $filters\\n  ) {\\n    hasMore\\n    total\\n    questions {\\n      acRate\\n      difficulty\\n      freqBar\\n      frontendQuestionId\\n      isFavor\\n      paidOnly\\n      solutionNum\\n      status\\n      title\\n      titleCn\\n      titleSlug\\n      topicTags {\\n        name\\n        nameTranslated\\n        id\\n        slug\\n      }\\n      extra {\\n        hasVideoSolution\\n        topCompanyTags {\\n          imgUrl\\n          slug\\n          numSubscribed\\n        }\\n      }\\n    }\\n  }\\n}\\n    ","variables":{"categorySlug":"all-code-essentials","skip":0,"limit":50,"filters":{"searchKeywords":"${e}"}},"operationName":"problemsetQuestionList"}`,method:"POST"}}function W(e){return{headers:{"content-type":"application/json"},body:`{"query":"\\n    query questionTranslations($titleSlug: String!) {\\n  question(titleSlug: $titleSlug) {questionId\\n    translatedTitle\\n    translatedContent\\n  }\\n}\\n    ","variables":{"titleSlug":"${e}"},"operationName":"questionTranslations"}`,method:"POST"}}import Ee from"path";var X=async(e,t)=>await fetch(e,t).then(o=>o.json());var h=async(e,t="https://leetcode.cn/")=>await X(Ee.join(t,"graphql"),e);function Y(e){return{headers:{"content-type":"application/json"},body:`{"query":"\\n    query questionEditorData($titleSlug: String!) {\\n  question(titleSlug: $titleSlug) {\\n    questionId\\n    questionFrontendId\\n    codeSnippets {\\n      lang\\n      langSlug\\n      code\\n    }\\n    envInfo\\n    enableRunCode\\n    hasFrontendPreview\\n    frontendPreviews\\n  }\\n}\\n    ","variables":{"titleSlug":"${e}"},"operationName":"questionEditorData"}`,method:"POST"}}var Z=async e=>(await h(Y(e))).data.question?.codeSnippets;var ee=async(e,t)=>(await Z(e)).find(s=>s.langSlug===t)?.code;import{UpdateMode as eo}from"realm";var te=e=>k(t=>t.objects("Store").filtered("key=$0",e)?.[0]?.toJSON()?.value);var oe="javascript";var ne=async()=>await te("language")??oe,se=e=>Oe.find(o=>o.name.toLowerCase()===e.toLowerCase())?.extension??".js",Oe=[{id:0,name:"cpp",extension:".cpp"},{id:1,name:"java",extension:".java"},{id:2,name:"python",extension:".py"},{id:11,name:"python3",extension:".py"},{id:3,name:"mysql",extension:".sql"},{id:14,name:"mssql",extension:".sql"},{id:15,name:"oraclesql",extension:".sql"},{id:4,name:"c",extension:".c"},{id:5,name:"csharp",extension:".cs"},{id:6,name:"javascript",extension:".js"},{id:20,name:"typescript",extension:".ts"},{id:8,name:"bash",extension:".sh"},{id:19,name:"php",extension:".php"},{id:9,name:"swift",extension:".swift"},{id:13,name:"kotlin",extension:".kt"},{id:24,name:"dart",extension:".dart"},{id:10,name:"golang",extension:".go"},{id:7,name:"ruby",extension:".rb"},{id:12,name:"scala",extension:".scala"},{id:16,name:"html",extension:".html"},{id:17,name:"pythonml",extension:".py"},{id:18,name:"rust",extension:".rs"},{id:21,name:"racket",extension:".rkt"},{id:22,name:"erlang",extension:".erl"},{id:23,name:"elixir",extension:".ex"},{id:25,name:"pythondata",extension:".py"},{id:26,name:"react",extension:".jsx"},{id:27,name:"vanillajs",extension:".js"},{id:28,name:"postgresql",extension:".sql"}];async function re(e,t={}){let s=(await h(W(e))).data.question,n=await ne(),r=await ee(e,n);return{id:s?.questionId,slug:e,title:s?.translatedTitle,detail:s?.translatedContent,lang:n,code:r,...t}}async function v(e){let o=(await h(H(e.toString())))?.data?.problemsetQuestionList?.questions?.find(r=>r?.frontendQuestionId===e.toString());if(!o)return{id:null};let s=o.titleSlug;return await re(s,{id:e})}var Q=e=>!e||!e?.id?"":`${e.id}.${e.slug}`;var ie=e=>`${e.id}.${e.title}`;import w from"inquirer";import y from"path";import{readdirSync as De}from"fs";function ae(e,t){return De(e).filter(o=>o.includes(t)).length}import{readdirSync as Fe}from"fs";function ce(e,t){return Fe(e).filter(o=>o.includes(t))}var le=async()=>{let e=[{type:"list",name:"mode",message:"\u8BF7\u9009\u62E9\u68C0\u67E5\u95EE\u9898\u7684\u6A21\u5F0F:",choices:["today","identity","random"]}],{mode:t}=await w.prompt(e,null),o=[{type:"input",name:"identity",message:"\u8BF7\u8F93\u5165\u9898\u76EE\u7F16\u53F7:"}],s;switch(t){case"identity":let{identity:p}=await w.prompt(o,null);s=p?await v(p):await g(t);break;case"random":s=await g(t);break;case"today":default:s=await g(t);break}let n=Q(s),r=process.cwd(),i=y.join(r,n),a=[{type:"confirm",name:"dirRight",message:`\u662F\u5426\u68C0\u6D4B\u5F53\u524D\u76EE\u5F55[ ${r} ]\u4E0B\u7684\u9898\u76EE[ ${n} ]?`}],{dirRight:c}=await w.prompt(a,null);if(!c){let p=[{type:"input",name:"newDir",message:`\u8BF7\u9009\u62E9\u65B0\u76EE\u5F55(\u57FA\u7840\u5730\u5740\u4E3A${r})[\u6309\u56DE\u8F66[Enter]\u7EC8\u6B62\u64CD\u4F5C]:`}],{newDir:u}=await w.prompt(p,null);u||(console.log("[LK-LOG]\u7528\u6237\u7EC8\u6B62\u64CD\u4F5C~"),process.exit(0)),i=y.join(y.join(process.cwd(),u),`${n}`)}let l=y.dirname(i);if(ae(l,n)>1){let p=[{type:"list",name:"selectQuestion",message:`\u9898\u76EE[ ${n} ]\u6709\u591A\u4E2A\u526F\u672C,\u8BF7\u9009\u62E9\u8981\u68C0\u6D4B\u7684\u526F\u672C:`,choices:ce(l,n)}],{selectQuestion:u}=await w.prompt(p,null);i=y.join(l,u),console.log(`\u7528\u6237\u9009\u62E9\u9898\u76EE[ ${n}]\u7684\u526F\u672C[ ${u}]\u8FDB\u884C\u68C0\u6D4B`)}let d=y.join(i,`question${s.lang}`);await S(d),console.log(`\u9898\u76EE[${n}]\u68C0\u67E5\u5B8C\u6210\uFF01
\u6587\u4EF6\u5730\u5740\u4E3A: ${d}`),process.exit(0)};var pe=`
A powerful practice platform for leetcode.
CLI / Template Project / Plugin, you can create question by any way you like.
See https://github.com/wh131462/leetcode-practice
`;import ue from"https";import Ie from"fs";import Pe from"path";var Ve="https://registry.npmjs.org/leetcode-practice",Te="https://raw.githubusercontent.com/wh131462/leetcode-practice/master/package.json",Ue=()=>new Promise((e,t)=>{console.log("\u5F00\u59CB\u83B7\u53D6npm\u4ED3\u5E93\u4E2D\u7684\u7248\u672C\u53F7..."),ue.get(Ve,o=>{let s="";o.on("data",n=>{s+=n}),o.on("end",()=>{try{let r=JSON.parse(s)["dist-tags"].latest;console.log("npm\u4ED3\u5E93\u4E2D\u7684\u7248\u672C\u53F7\u83B7\u53D6\u6210\u529F!"),e(r)}catch(n){console.log("npm\u4ED3\u5E93\u4E2D\u7684\u7248\u672C\u53F7\u83B7\u53D6\u5931\u8D25!"),t(n)}})}).on("error",o=>{console.log("npm\u4ED3\u5E93\u4E2D\u7684\u7248\u672C\u53F7\u83B7\u53D6\u5931\u8D25!"),t(o)})}),N=()=>new Promise((e,t)=>{console.log("\u5F00\u59CB\u83B7\u53D6github\u4ED3\u5E93\u7684\u7248\u672C\u53F7..."),ue.get(Te,o=>{let s="";o.on("data",n=>{s+=n}),o.on("end",()=>{try{let n=JSON.parse(s);console.log("github\u4ED3\u5E93\u7684\u7248\u672C\u53F7\u83B7\u53D6\u6210\u529F!"),e(n.version)}catch(n){console.log("github\u4ED3\u5E93\u7684\u7248\u672C\u53F7\u83B7\u53D6\u5931\u8D25!"),t(n)}})}).on("error",o=>{console.log("github\u4ED3\u5E93\u7684\u7248\u672C\u53F7\u83B7\u53D6\u5931\u8D25!"),t(o)})}),Ae=()=>{console.log("\u5F00\u59CB\u83B7\u53D6\u672C\u5730\u7248\u672C\u53F7...");try{let{version:e}=JSON.parse(Ie.readFileSync(Pe.resolve(b,"package.json"),"utf-8"));return console.log("\u672C\u5730\u7248\u672C\u53F7\u83B7\u53D6\u6210\u529F!"),e}catch{return console.log("\u672C\u5730\u7248\u672C\u53F7\u83B7\u53D6\u5931\u8D25!"),!1}},me=async()=>{let e=await Ue(),t=await N(),o=Ae();return{localVersion:o,npmVersion:e,githubVersion:t,isCliUpdate:e!==o,isGithubUpdate:t!==o}};import he from"inquirer";var de=()=>{let e=import.meta.url;return/etc\/checkEnv.js$/mi.test(e)?"project":"cli"};import{exec as ge}from"child_process";import Me from"inquirer";import Ge from"https";import E from"fs";var fe=async e=>{switch(e){case"cli":return await Je();case"project":return await Re();default:throw new Error(`Unsupported environment: ${e}`)}},Je=()=>new Promise((e,t)=>{ge("npm install -g leetcode-practice",(o,s,n)=>{o?t(o):e()})}),Re=async()=>{async function e(t){return new Promise((o,s)=>{ge(t,(n,r,i)=>{n?s(n):o(r.trim())})})}try{let t=await N(),{hasChanges:o}=await Me.prompt([{type:"confirm",name:"hasChanges",message:"\u662F\u5426\u5B58\u5728\u81EA\u5DF1\u4FEE\u6539\u8FC7\u7684\u5185\u5BB9\uFF1F",default:!1}]);if(o){console.log("\u60A8\u6709\u672A\u63D0\u4EA4\u7684\u66F4\u6539\uFF0C\u8BF7\u5148\u5904\u7406\u540E\u518D\u66F4\u65B0\u3002");return}if(await e("git status --porcelain")){console.log("\u60A8\u6709\u672A\u63D0\u4EA4\u7684\u66F4\u6539\uFF0C\u8BF7\u5148\u63D0\u4EA4\u540E\u518D\u66F4\u65B0\u3002");return}let r=(await Ge.get("https://raw.githubusercontent.com/wh131462/leetcode-practice")).data;for(let a in r)E.writeFileSync(a,r[a]),await e(`git add ${a}`);let i=JSON.parse(E.readFileSync("package.json","utf-8"));i.version=`${t}`,E.writeFileSync("package.json",JSON.stringify(i,null,2)),await e(`git commit -m "update:${t}"`),console.log("\u9879\u76EE\u66F4\u65B0\u5B8C\u6210\u3002")}catch(t){console.error("\u66F4\u65B0\u8FC7\u7A0B\u4E2D\u51FA\u73B0\u9519\u8BEF:",t)}};var ye=async()=>{let e=de(),t={type:"list",name:"choseEnv",message:`\u81EA\u52A8\u68C0\u6D4B\u5230\u7684\u73AF\u5883\u4E3A[ ${e} ],\u5982\u679C\u4E0D\u662F,\u8BF7\u8FDB\u884C\u9009\u62E9,\u5982\u662F,\u8BF7\u6309\u4E0B\u56DE\u8F66\u786E\u8BA4.`,choices:["cli","project"],default:e},{choseEnv:o}=await he.prompt(t,null),{localVersion:s,npmVersion:n,githubVersion:r,isCliUpdate:i,isGithubUpdate:a}=await me();console.log(`\u5F53\u524D\u7248\u672C:[ ${s} ] npm\u5305\u6700\u65B0\u7248\u672C:[ ${n} ] github\u7248\u672C:[ ${r} ]`);let c=!1,l="\u672A\u77E5";switch(o){case"project":c=a,l=r;break;case"cli":c=i,l=remoteVersion;break;default:console.log("\u672A\u77E5\u73AF\u5883:",o),process.exit(0);break}if(c){let d={type:"confirm",name:"willUpdate",message:`\u68C0\u6D4B\u5230[ ${e} ]\u53EF\u66F4\u65B0\u7248\u672C[ ${l} ],\u662F\u5426\u8FDB\u884C\u66F4\u65B0?`},{willUpdate:p}=await he.prompt(d,null);if(p){console.log("\u5F00\u59CB\u66F4\u65B0...");let u=await fe(e);console.log("\u66F4\u65B0\u5B8C\u6210~\u795D\u4F60\u4F7F\u7528\u6109\u5FEB~")}else console.log("\u4F60\u9009\u62E9\u8DF3\u8FC7\u6B64\u6B21\u66F4\u65B0,\u5982\u679C\u60F3\u8981\u8FDB\u884C\u66F4\u65B0,\u968F\u65F6\u53EF\u4EE5\u4F7F\u7528\u53C2\u6570 -u \u8FDB\u884C\u66F4\u65B0\u68C0\u6D4B!\u795D\u4F60\u4F7F\u7528\u6109\u5FEB~");process.exit(0)}else console.log("\u5F53\u524D\u5DF2\u662F\u6700\u65B0\u7248\u672C!\u795D\u4F60\u4F7F\u7528\u6109\u5FEB~"),process.exit(0)};var Ke="1.0.3";D.version(Ke).description(`${pe}
${I}
${T}`).addHelpText("after",P+V).arguments("[identity]").option("-t, --today","Check the question today.").option("-i, --identity <identity>","Check the specified question by identity.").option("-r, --random","Check the last random question.").option("-e, --easy","Use easy mode.").option("-d, --directory <directory>","Set the question directory.").option("-l, --language [language]","Set/Get the code language of question.").option("-u, --update","Check the version to determine whether to update to the latest one.").parse(process.argv);var _e=D.args,m=D.opts();if(m.language){if(m.language!==!0)await easyLanguageView(m.language);else{let e=await getQuestionLanguage();console.log("\u5F53\u524DCLI\u8BED\u8A00\u73AF\u5883\u4E3A:"+e)}process.exit(0)}var He=m.directory?xe.join(process.cwd(),m.directory):process.cwd();m.easy&&(await le(),process.exit(0));m.update&&(await ye(),process.exit(0));var O=async(e,t)=>{let o=xe.join(He,Q(t),`question${se(t.lang)}`);return ze.existsSync(o)?(console.log(`MODE: ${e}
\u9898\u76EE[${ie(t)}]\u68C0\u6D4B\u7ED3\u679C:`),await S(o)):console.log(`\u6587\u4EF6[${o}]\u4E0D\u5B58\u5728,\u8BF7\u786E\u4FDD\u5DF2\u7ECF\u521B\u5EFA!`),!0},We={today:async()=>{let e=await g("today");await O("today",e),process.exit(0)},random:async()=>{let e=await g("random");await O("random",e),process.exit(0)},identity:async e=>{let t=e?await v(e):await g(F);await O("identity",t),process.exit(0)}},F=U(_e,m),Xe=A(F,_e,m);We[F](Xe);
